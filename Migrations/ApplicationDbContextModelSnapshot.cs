// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Taligado.Data;

#nullable disable

namespace Taligado.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Taligado.Models.Alerta", b =>
                {
                    b.Property<int>("IdAlerta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlerta"));

                    b.Property<DateTime>("DataAlerta")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Sensor_IdSensor")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Severidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdAlerta");

                    b.HasIndex("Sensor_IdSensor");

                    b.ToTable("alerta", (string)null);
                });

            modelBuilder.Entity("Taligado.Models.Dispositivo", b =>
                {
                    b.Property<int>("IdDispositivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDispositivo"));

                    b.Property<DateTime>("DataInstalacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("Filial_IdFilial")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("PotenciaNominal")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdDispositivo");

                    b.HasIndex("Filial_IdFilial");

                    b.ToTable("dispositivo", (string)null);
                });

            modelBuilder.Entity("Taligado.Models.DispositivoSensor", b =>
                {
                    b.Property<int>("DispositivoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SensorId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("DispositivoId", "SensorId");

                    b.HasIndex("SensorId");

                    b.ToTable("DispositivoSensor");
                });

            modelBuilder.Entity("Taligado.Models.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpresa"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("DataFundacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Segmento")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdEmpresa");

                    b.ToTable("empresa", (string)null);
                });

            modelBuilder.Entity("Taligado.Models.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEndereco"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdEndereco");

                    b.ToTable("endereco", (string)null);
                });

            modelBuilder.Entity("Taligado.Models.Filial", b =>
                {
                    b.Property<int>("IdFilial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFilial"));

                    b.Property<string>("Area_Operacional")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("CNPJ_Filial")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Empresa_IdEmpresa")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Endereco_IdEndereco")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdFilial");

                    b.HasIndex("Empresa_IdEmpresa");

                    b.HasIndex("Endereco_IdEndereco");

                    b.ToTable("filial", (string)null);
                });

            modelBuilder.Entity("Taligado.Models.Historico", b =>
                {
                    b.Property<int>("IdHistorico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorico"));

                    b.Property<double>("CustoEnergiaEstimado")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double>("IntensidadeCarbono")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("RegulacaoEnergiaIdRegulacao")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("RegulacaoEnergia_IdRegulacao")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("ValorConsumoKwh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("IdHistorico");

                    b.HasIndex("RegulacaoEnergiaIdRegulacao");

                    b.HasIndex("RegulacaoEnergia_IdRegulacao");

                    b.ToTable("historico", (string)null);
                });

            modelBuilder.Entity("Taligado.Models.HistoricoSensor", b =>
                {
                    b.Property<int>("HistoricoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SensorId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("HistoricoId", "SensorId");

                    b.HasIndex("SensorId");

                    b.ToTable("HistoricoSensor");
                });

            modelBuilder.Entity("Taligado.Models.RegulacaoEnergia", b =>
                {
                    b.Property<int>("IdRegulacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegulacao"));

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("NomeBandeira")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("TarifaAdicionalBandeira")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("TarifaKwh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("IdRegulacao");

                    b.ToTable("regulacao_energia", (string)null);
                });

            modelBuilder.Entity("Taligado.Models.Sensor", b =>
                {
                    b.Property<int>("IdSensor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSensor"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("TempoOperacao")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("ValorAtual")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("IdSensor");

                    b.ToTable("sensor", (string)null);
                });

            modelBuilder.Entity("Taligado.Models.Alerta", b =>
                {
                    b.HasOne("Taligado.Models.Sensor", "Sensor")
                        .WithMany("Alertas")
                        .HasForeignKey("Sensor_IdSensor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("Taligado.Models.Dispositivo", b =>
                {
                    b.HasOne("Taligado.Models.Filial", "Filial")
                        .WithMany("Dispositivos")
                        .HasForeignKey("Filial_IdFilial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("Taligado.Models.DispositivoSensor", b =>
                {
                    b.HasOne("Taligado.Models.Dispositivo", "Dispositivo")
                        .WithMany("DispositivoSensores")
                        .HasForeignKey("DispositivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taligado.Models.Sensor", "Sensor")
                        .WithMany("DispositivoSensores")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispositivo");

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("Taligado.Models.Filial", b =>
                {
                    b.HasOne("Taligado.Models.Empresa", "Empresa")
                        .WithMany("Filiais")
                        .HasForeignKey("Empresa_IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taligado.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("Endereco_IdEndereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Taligado.Models.Historico", b =>
                {
                    b.HasOne("Taligado.Models.RegulacaoEnergia", null)
                        .WithMany("Historicos")
                        .HasForeignKey("RegulacaoEnergiaIdRegulacao");

                    b.HasOne("Taligado.Models.RegulacaoEnergia", "RegulacaoEnergia")
                        .WithMany()
                        .HasForeignKey("RegulacaoEnergia_IdRegulacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegulacaoEnergia");
                });

            modelBuilder.Entity("Taligado.Models.HistoricoSensor", b =>
                {
                    b.HasOne("Taligado.Models.Historico", "Historico")
                        .WithMany("HistoricoSensores")
                        .HasForeignKey("HistoricoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taligado.Models.Sensor", "Sensor")
                        .WithMany("HistoricoSensores")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Historico");

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("Taligado.Models.Dispositivo", b =>
                {
                    b.Navigation("DispositivoSensores");
                });

            modelBuilder.Entity("Taligado.Models.Empresa", b =>
                {
                    b.Navigation("Filiais");
                });

            modelBuilder.Entity("Taligado.Models.Filial", b =>
                {
                    b.Navigation("Dispositivos");
                });

            modelBuilder.Entity("Taligado.Models.Historico", b =>
                {
                    b.Navigation("HistoricoSensores");
                });

            modelBuilder.Entity("Taligado.Models.RegulacaoEnergia", b =>
                {
                    b.Navigation("Historicos");
                });

            modelBuilder.Entity("Taligado.Models.Sensor", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("DispositivoSensores");

                    b.Navigation("HistoricoSensores");
                });
#pragma warning restore 612, 618
        }
    }
}
